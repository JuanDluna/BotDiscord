// basic_commands.js
const { spotifyApi, startSpotifyLink, getAccessToken, refreshAccessToken } = require('./spotify');

// Comando para mostrar lo que est√° reproduciendo el bot en Spotify
const playing = async (message) => {
    let accessToken = getAccessToken(); // Obtenemos el token de acceso de Spotify
    
    // Verificamos si el accessToken est√° vac√≠o
    if (!accessToken) {
        console.log('‚ùå No se tiene un accessToken, se intenta refrescar.');
        accessToken = await refreshAccessToken(); // Refrescamos el token de acceso
        if (!accessToken) {
            message.reply('‚ùå No se pudo obtener el token de acceso. Por favor, vincula tu cuenta de Spotify con !link.');
            return;
        }
    }

    try {
        // Comprobamos si el bot tiene acceso a la informaci√≥n de la canci√≥n en reproducci√≥n
        const trackData = await spotifyApi.getMyCurrentPlayingTrack();

        if (trackData.body && trackData.body.item) {
            const track = trackData.body.item;
            message.reply(`üé∂ Actualmente estoy reproduciendo: ${track.name} por ${track.artists.map(a => a.name).join(', ')}`);
        } else {
            message.reply('‚ùå No estoy reproduciendo ninguna canci√≥n en este momento.');
        }
    } catch (error) {
        message.reply('‚ùå Hubo un error al intentar obtener la canci√≥n que estoy reproduciendo.');
        console.log(error);
    }
};


module.exports = {
    '!hola': (message) => {
        message.reply('¬°Hola! ¬øC√≥mo est√°s? üòä');
    },
    '!ping': (message) => {
        message.reply('üèì ¬°Pong!');
    },
    "!link": (message) => {
        startSpotifyLink(message);
    },
    // API SPOTIFY
    '!playing': playing, // Comando para mostrar lo que est√° reproduciendo el bot en Spotify
    // A√±adir m√°s comandos
};
